<Route path="/business" element={ <News pageSize={18} country="in" category="Sports"/>}></Route>
<Route path="/entertainment" element={ <News pageSize={18} country="in" category="Sports"/>}></Route>
<Route path="/general" element={ <News pageSize={18} country="in" category="Sports"/>}></Route>
<Route path="/health" element={ <News pageSize={18} country="in" category="Sports"/>}></Route>
<Route path="/science" element={ <News pageSize={18} country="in" category="Sports"/>}></Route>
<Route path="/sports" element={ <News pageSize={18} country="in" category="Sports"/>}></Route>
<Route path="/technology" element={ <News pageSize={18} country="in" category="Sports"/>}></Route>

import React, { Component } from 'react'
import NewsItem from './NewsItem'
import Spinner from './Spinner';
import PropTypes from 'prop-types';
import InfiniteScroll from "react-infinite-scroll-component";
import "../App.css";

export default class News extends Component {
  
 static defaultProps={
  country:'in',
  category:'general',
  pageSize:20
 }

 static propTypes={
  country:PropTypes.string,
  category:PropTypes.string,
  pageSize:PropTypes.number
 }

 capitalizeFirstLetter(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}
  constructor(props){
    super(props);
    console.log("Hello,I am constructor from news component");
    this.state={
      articles:[],
      loading:false,
       page:1,
       totalResults:0

    }
    document.title=`${this.capitalizeFirstLetter(this.props.category)} - NewsMonkey`
  }

  async newsUpdate(){
  
    const url=`https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=6b1e8dd06e624675bd1c0f117fe01cee&page=${this.state.page}&pageSize=${this.props.pageSize}`
    this.setState({loading:true})
    let response= await fetch(url);
    let data=await response.json() 
    
    this.setState({
      articles:data.articles,
      totalResults:data.totalResults,
      loading:false,
    
      
    })
  }
  async componentDidMount(){
    // let url=`https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=6b1e8dd06e624675bd1c0f117fe01cee&page=1&pageSize=${this.props.pageSize}`
    // this.setState({loading:true})
    // let response= await fetch(url);
    // let data=await response.json() 
    
    // this.setState({
    //   articles:data.articles,
    //   totalResults:data.totalResults,
    //   loading:false
    // })
    console.log("Hello,I am mount from news component");

    this.newsUpdate();
    console.log()
  }


 handlePrevClick= async ()=>{



  
  // let url=` https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=6b1e8dd06e624675bd1c0f117fe01cee&page=${this.state.page-1}&pageSize=${this.props.pageSize}`
  // this.setState({loading:true})
  // let response= await fetch(url);
  // let data=await response.json() 
  
  // this.setState({
  //   page: this.state.page-1,
  //   articles:data.articles,
  //   loading:false
  // })
  // this.setState({page:this.state.page - 1});
  this.setState({page:this.state.page -- });
  this.newsUpdate();
  console.log(this.state.page)

}

fetchMoreData=async()=>{
  this.setState({page:this.state.page ++ });
  const url=`https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=6b1e8dd06e624675bd1c0f117fe01cee&page=${this.state.page}&pageSize=${this.props.pageSize}`
  let response= await fetch(url);
  let data=await response.json() 
  
  this.setState({
    articles:this.state.articles.concat(data.articles),
    totalResults:data.totalResults,
  
    
  })
}
handleNextClick= async ()=>{
  
  // let url=` https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=6b1e8dd06e624675bd1c0f117fe01cee&page=${ this.state.page+1}&pageSize=${this.props.pageSize}`
  // this.setState({loading:true})
  // let response= await fetch(url);
  // let data=await response.json() 
  
  // this.setState({
  //   page: this.state.page+1,
  //   articles:data.articles,
  // loading:false
  // })
  this.setState({page:this.state.page++});
  this.newsUpdate();
  // this.setState({page:this.state.page });
  console.log(this.state.page )

}

   


  render() {
let {pageSize}=this.props
    return (
   <>
      
        { console.log("Hello,I am render from news component")}
<h1 className='text-center'>NewsMonkey - Top {this.capitalizeFirstLetter(this.props.category)} Headlines</h1>
              {/* {this.state.loading && <Spinner/>} */}


        <InfiniteScroll
          dataLength={this.state.articles.length}
          next={this.fetchMoreData}
          hasMore={!this.state.articles.length!==this.state.totalResults}
          loader={<Spinner/>}
        >
<div className="container">

        <div className="row ">
                {this.state.articles.map((element)=>{
                return <div className="col-md-4 " key={element.url}>
                <NewsItem title={element.title?element.title.slice(0,40):""} source={element.source.name} author={element.author?element.author:"Unknown"} date={element.publishedAt} description ={element.description?element.description.slice(0,85):""}  imageUrl={element.urlToImage} newsUrl={element.url}/>
                </div>

                })}
                </div>

</div>
       
             </InfiniteScroll>
             
        
        

{/* 
        <div className="container mt-3 d-flex justify-content-between">
            <button disabled={this.state.page<=1} type="button" className="btn btn-dark" onClick={this.handlePrevClick}>&larr; Previous</button>
            <button disabled={this.state.page+1 >Math.ceil(this.state.totalResults/ this.props.pageSize)} type="button" className="btn btn-dark" onClick={this.handleNextClick}>Next &rarr; </button>
            </div> */}
    
    </>
    )
  }
}

const FetchApi=async()=>{
  props.updateArticles([]);
  props.setProgress(0)
  let url=`https://newsapi.org/v2/top-headlines?apiKey=6b1e8dd06e624675bd1c0f117fe01cee&page=1&q=water`;
  let searchNews=url ;
  console.log(searchNews)
  props.setProgress(30)
  let response= await fetch(searchNews);
  props.setProgress(70)
  let data=await response.json() ;
  props.setProgress(100)
  props.updateArticles(data.articles);
  console.log(data.articles)
  props.updateTotalResults(data.totalResults);
  props.updateLoading(false);

}